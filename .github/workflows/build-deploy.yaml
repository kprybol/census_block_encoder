name: Build & Deploy Docker Containers
on:
  # We'll trigger this workflow when a PR is submitted to make sure
  # your application still builds successfully with the new commits.
  pull_request: []
  # We'll also trigger this workflow when you want to deploy your container.
  # This means any push to main. You might want to do a release trigger.
  push:
    branches:
      - main
      - master
  # Let's also trigger a build and publish of your container when
  # you release a new version. You can use "created" here instead of published.
  release:
    types: [published]
jobs:
  deploy-images:
    runs-on: ubuntu-latest
    env:
      registry: ghcr.io
      username: kprybol
      repository: census_block_encoder
    strategy:
      fail-fast: false
      matrix:
        dockerfile: [[Dockerfile, latest]]
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 1024
          swap-size-mb: 4096
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
      - name: Checkout
        uses: actions/checkout@v2
      - name: create latest tag variable
        run: |
          container="${{ env.registry }}/${{ env.username}}/${{ env.repository }}:latest"
          echo "container=${container}" >> $GITHUB_ENV
      - name: create pull request tag variable based on name of associated branch
        if: github.event_name == 'pull_request'
        run: |
          versioned="${{ env.registry }}/${{ env.username}}/${{ env.repository }}:${GITHUB_HEAD_REF}"
          echo "versioned=${versioned}" >> $GITHUB_ENV
      - name: build container
        run: |
          docker build -t ${{ env.container }} .
      - name: test run container
        run: |
          docker run --rm -v "${PWD}/test":/tmp ${{ env.container }} my_address_file_geocoded.csv 2010
      - name: login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ${{ env.registry }}
          username: ${{ env.username }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: deploy pull request container
        run: |
          docker tag ${{ env.container }} ${{ env.versioned }}
          docker push ${{ env.versioned }}
